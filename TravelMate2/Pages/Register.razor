@page "/Register"
@using TravelMate.Models
@using TravelMate2.Services
@inject IUserService service
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="col-md-6">
        <div class="card shadow-lg">
            <div class="card-header bg-primary text-white text-center">
                <h4><i class="fas fa-user-plus"></i> Create Your Travel Mate Account</h4>
            </div>
            <div class="card-body">
                <EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name"><i class="fas fa-user"></i> Enter Name:</label>
                        <InputText id="name" class="form-control" @bind-Value="user.Name" placeholder="Name" />
                    </div>

                    <div class="form-group">
                        <label for="username"><i class="fas fa-user-circle"></i> Enter Username:</label>
                        <InputText id="username" class="form-control" @bind-Value="user.Username" placeholder="Username" />
                    </div>

                    <div class="form-group">
                        <label for="email"><i class="fas fa-envelope"></i> Enter Email:</label>
                        <InputText id="email" class="form-control" @bind-Value="user.Email" placeholder="Email address" />
                    </div>

                    <div class="form-group">
                        <label for="password"><i class="fas fa-lock"></i> Enter Password:</label>
                        <InputText id="password" type="password" class="form-control" @bind-Value="user.PasswordHash" placeholder="Password" />
                    </div>

                    <div class="form-group">
                        <label for="phoneNumber"><i class="fas fa-user"></i> Enter Name:</label>
                        <InputText id="phoneNumber" class="form-control" @bind-Value="user.PhoneNumber" placeholder="Phone Number" />
                    </div>

                    <div class="form-group">
                        <label for="nationality"><i class="fas fa-globe"></i> Select Nationality:</label>
                        <InputSelect id="nationality" class="form-control" @bind-Value="user.Nationality">
                            <option value="">Select Nationality</option>
                            @foreach (var type in Enum.GetValues(typeof(Nationality)))
                            {
                                <option value="@type">@type</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label for="usertype"><i class="fas fa-user-tag"></i> Select User Type:</label>
                        <InputSelect id="usertype" class="form-control" @bind-Value="user.UserType" disabled>
                            <option value="@UserType.Regular">@UserType.Regular</option>
                        </InputSelect>
                    </div>

                   
                    <div class="form-check mb-3">
                        <InputCheckbox id="rememberPassword" class="form-check-input" @bind-Value="rememberPassword" />
                        <label class="form-check-label" for="rememberPassword">
                            Remember password
                        </label>
                    </div>

                    <button type="submit" class="btn btn-primary btn-block">
                        <i class="fas fa-user-plus"></i> Create User
                    </button>
                </EditForm>

                @if (isSuccess)
                {
                    <div class="alert alert-success mt-3">User created successfully!</div>
                }

                @if (errorMessage != null)
                {
                    <div class="alert alert-danger mt-3">@errorMessage</div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private User user = new User();
    private bool rememberPassword = false;
    private bool isSuccess = false;
    private string? errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            user.AuthProvider = AuthProvider.Local;
            await service.Add(user);
            isSuccess = true;
            errorMessage = null;
        }
        catch (Exception ex)
        {
            isSuccess = false;
            errorMessage = ex.Message;
        }
    }
}